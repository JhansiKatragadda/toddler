# This is a basic workflow to help you get started with Actions

name: two bicep pipelines deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build1:

    name: 'bicep str1 deploy'
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Setup Azure CLI
        uses: pietrobolcato/install-azure-cli-action@v1.0.1
        
      - name: Azure Login
        uses: Azure/login@v2.2.0
        with:
          # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
          creds: ${{ secrets.AZURE_SPN_CREDENTIAL }}
          
      - name: az str1 deploy
        working-directory: '${{github.workspace}}/'
        run: |
            STORAGE_ACCOUNT_NAME="str1${{ github.run_id }}"
            az deployment group create --resource-group rg1 --template-file ./storageaccount.bicep --parameters storageAccountName=$STORAGE_ACCOUNT_NAME

  build2:

    name: 'bicep str2 deploy'
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: [build1]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Setup Azure CLI
        uses: pietrobolcato/install-azure-cli-action@v1.0.1
        
      - name: Azure Login
        uses: Azure/login@v2.2.0
        with:
          # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
          creds: ${{ secrets.AZURE_SPN_CREDENTIAL }}
          
      - name: az str2 deploy
        working-directory: '${{github.workspace}}/'
        run: |
            STORAGE_ACCOUNT_NAME="str2${{ github.run_id }}"
            az deployment group create --resource-group rg1 --template-file ./storageaccount.bicep --parameters storageAccountName=$STORAGE_ACCOUNT_NAME
      
